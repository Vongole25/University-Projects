{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5389bf39",
   "metadata": {},
   "source": [
    "# 모듈 다운로드"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "631ef494",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3a8f4062",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f3d858d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import plotly.express as px"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9d886af5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2f14b221",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.font_manager as fm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3bd80de9",
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install plotly"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4406838f",
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install folium"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a2a01a58",
   "metadata": {},
   "outputs": [],
   "source": [
    "from folium.plugins import MarkerCluster"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7e0bda1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install pyproj"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12e285e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pyproj"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4a80a5a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import statsmodels.api as sm\n",
    "from statsmodels.stats.outliers_influence import variance_inflation_factor"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16b0e8c8",
   "metadata": {},
   "source": [
    "# 결측값 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "75c95d30",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_origin = pd.read_csv(\"C:/Users/cbskust/Dropbox/교과/다차원자료분석PBL/기말고사/데이터/data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b538a5f",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.DataFrame(data_origin.isna().sum()).T.style.background_gradient(cmap='rainbow')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6b87a7f",
   "metadata": {},
   "source": [
    "# 이상치 제거"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b12c14e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# PRICE 열의 IQR 계산\n",
    "Q1 = data_origin['PRICE'].quantile(0.25)\n",
    "Q3 = data_origin['PRICE'].quantile(0.75)\n",
    "IQR = Q3 - Q1\n",
    "lower_bound = Q1 - 1.5 * IQR\n",
    "upper_bound = Q3 + 1.5 * IQR\n",
    "\n",
    "# IQR 기준으로 이상치 제거\n",
    "data = data_origin[(data_origin['PRICE'] >= lower_bound) & (data_origin['PRICE'] <= upper_bound)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52d055b0",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "box_original = px.box(data_origin, y='PRICE', title='Box Plot of Original Data',\n",
    "                          labels={'PRICE': 'PRICE'})\n",
    "\n",
    "# 이상치 제거 후 박스 플롯 그리기\n",
    "box_no_outliers = px.box(data, y='PRICE', title='Box Plot without outliers',\n",
    "                             labels={'PRICE': 'PRICE'})\n",
    "\n",
    "\n",
    "box_original.write_image(\"1.png\", scale = 3)\n",
    "box_no_outliers.write_image(\"2.png\", scale = 3)\n",
    "# 그래프 출력\n",
    "box_original.show()\n",
    "box_no_outliers.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a18e2ee",
   "metadata": {},
   "source": [
    "## 데이터 엑셀과 csv로 저장"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "85cde8eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.to_csv(\"C:/Users/cbskust/Dropbox/교과/다차원자료분석PBL/기말고사/데이터/data_outlier_eliminated_csv.csv\", index = False, encoding = 'utf-8-sig')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6475a479",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.to_excel('C:/Users/cbskust/Dropbox/교과/다차원자료분석PBL/기말고사/데이터/data_outlier_eliminated_excel.xlsx', index = False, engine = 'openpyxl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f17127cb",
   "metadata": {},
   "source": [
    "# 기초통계량 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48355b11",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.DataFrame(data[['PRICE', 'TOTAL_POP', 'TOTAL_WORKER', 'BUILDING', 'BUS_N', 'MART_DEPARTMENT', 'WASTE_EFFECT']].describe()).T.style.format(\"{:.2f}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a67ce38c",
   "metadata": {},
   "source": [
    "# 데이터 시각화"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b4da7ced",
   "metadata": {},
   "outputs": [],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "98653848",
   "metadata": {},
   "outputs": [],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c0e1db29",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.rcParams['font.family']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9972f676",
   "metadata": {},
   "outputs": [],
   "source": [
    "font_path = 'C:/Windows/Fonts/malgun.ttf'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ce8d039a",
   "metadata": {},
   "outputs": [],
   "source": [
    "font_name = fm.FontProperties(fname=font_path).get_name()\n",
    "plt.rc('font', family=font_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "72b3e47b",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize=(10, 6))\n",
    "sns.countplot(x='SIGUNGU_NAME', data=data, color = 'grey')\n",
    "plt.title('Counter plot of SIGUNGU_NAME')\n",
    "plt.xlabel('SIGUNGU_NAME', fontsize = 12)\n",
    "plt.ylabel('Count')\n",
    "plt.xticks(fontsize = 7)\n",
    "plt.rc('font', family = font_name)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "006e7f8b",
   "metadata": {},
   "source": [
    "## 상관행렬"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "50525dcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "selected_columns = ['PRICE', 'TOTAL_POP', 'TOTAL_WORKER', 'BUILDING', 'BUS_N', 'MART_DEPARTMENT', 'WASTE_EFFECT']  \n",
    "selected_data = data[selected_columns]\n",
    "\n",
    "# 상관 행렬 계산\n",
    "corr_matrix = selected_data.corr()\n",
    "\n",
    "# 상관 행렬 시각화\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', vmin=-1, vmax=1)\n",
    "plt.title('Correlation Matrix of Selected Variables')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "29cc161b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 특정 변수 선택\n",
    "x_var = 'TOTAL_WORKER'  # x축에 사용할 변수명\n",
    "y_var = 'PRICE'   # y축에 사용할 변수명\n",
    "\n",
    "# 산점도 그리기\n",
    "fig = px.scatter(data, x=x_var, y=y_var, title=f'Scatter Plot of {x_var} vs {y_var}', labels={x_var: x_var, y_var: y_var})\n",
    "\n",
    "fig.update_layout(\n",
    "    width=700,  # 그래프의 너비\n",
    "    height=700  # 그래프의 높이\n",
    ")\n",
    "\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3f597049",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 특정 변수 선택\n",
    "x_var = 'BUILDING'  # x축에 사용할 변수명\n",
    "y_var = 'TOTAL_POP'   # y축에 사용할 변수명\n",
    "\n",
    "# 산점도 그리기\n",
    "fig = px.scatter(data, x=x_var, y=y_var, title=f'Scatter Plot of {x_var} vs {y_var}', labels={x_var: x_var, y_var: y_var})\n",
    "\n",
    "fig.update_layout(\n",
    "    width=700,  # 그래프의 너비\n",
    "    height=700  # 그래프의 높이\n",
    ")\n",
    "\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "150dbe10",
   "metadata": {},
   "outputs": [],
   "source": [
    "selected_columns = data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1580290c",
   "metadata": {},
   "outputs": [],
   "source": [
    "selected_columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6638843",
   "metadata": {},
   "outputs": [],
   "source": [
    "selected_data = data[selected_columns]\n",
    "\n",
    "# VIF 계산을 위해 상수항 추가\n",
    "X = selected_data.drop(columns=['PRICE', 'PNU', 'DONG_CODE', 'SIGUNGU_NAME', 'DONG_NAME', 'BON', 'BU', 'X', 'Y',\n",
    "       'LAND_USE_CODE'])  # 종속 변수 제거\n",
    "X = sm.add_constant(X)  # 상수항 추가\n",
    "\n",
    "# VIF 계산\n",
    "vif_data = pd.DataFrame()\n",
    "vif_data['Feature'] = X.columns\n",
    "vif_data['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]\n",
    "\n",
    "# VIF 결과 출력\n",
    "print(vif_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "21f1509f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "6539a890",
   "metadata": {},
   "source": [
    "# 변수 간 관계 분석"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3b3d09ae",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f9fa032d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed7bda9a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.10"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "312.344px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
